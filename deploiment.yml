# deploiment service authentification
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      serviceAccountName: auth-sacc
      containers:
      - name: auth-service
        image: aghilasob/auth_app:4
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: DB_HOST
          value: "postgres"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgresql-db
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgresql-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgresql-password
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 5000
---
# deploiment service llm

apiVersion: apps/v1
kind: Deployment
metadata:
  name: llm-service
  labels:
    app: llm-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: llm-service
  template:
    metadata:
      labels:
        app: llm-service
    spec:
      serviceAccountName: llm-sacc
      containers:
      - name: llm-service
        image: aghilasob/llm_app:2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5001
          name: http
        env:
        - name: WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: llm-secret
              key: WEBHOOK_URL
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: llm-service
spec:
  selector:
    app: llm-service
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 5001
---
# deploiment service ocr

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocr-service
  labels:
    app: ocr-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ocr-service
  template:
    metadata:
      labels:
        app: ocr-service
    spec:
      serviceAccountName: ocr-sacc
      containers:
      - name: ocr-service
        image: aghilasob/ocr_app:2
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5002
          name: http
        env:
        - name: GEMINI_AI_API_KEY
          valueFrom:
            secretKeyRef:
              name: ocr-secret
              key: GEMINI_AI_API_KEY
        volumeMounts:
        - name: upload-volume
          mountPath: /app/uploads
        resources:
          requests:
            cpu: "200m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      volumes:
      - name: upload-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ocr-service
spec:
  selector:
    app: ocr-service
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 5002
---
# Gateway & VirtualService pour HTTPS

apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: api-gateway
  namespace: istio-system
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "api.m1info.com"
    tls:
      httpsRedirect: true

  - port:
      number: 443
      name: https
      protocol: HTTPS
    hosts:
    - "api.m1info.com"
    tls:
      mode: SIMPLE
      credentialName: tls-secret
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: services-routing
  namespace: default
spec:
  hosts:
  - "api.m1info.com"
  gateways:
  - istio-system/api-gateway
  http:
  - match:
    - uri:
        exact: "/auth"
    - uri:
        prefix: "/auth/"
    route:
    - destination:
        host: auth-service
        port:
          number: 80
  - match:
    - uri:
        exact: "/llm"
    - uri:
        prefix: "/llm/"
    route:
    - destination:
        host: llm-service
        port:
          number: 80
  - match:
    - uri:
        exact: "/ocr"
    - uri:
        prefix: "/ocr/"
    route:
    - destination:
        host: ocr-service
        port:
          number: 80

  # route par defaut pour le chemin '/'
  - route:
    - destination:
        host: auth-service
        port:
          number: 80
